/*
 * Copyright (c) 2024 Joshua Wiens
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/unicode.dtsi>

&uc {
  default-mode = <UC_MODE_WIN_COMPOSE>;
  minimum-length = <0>;
  win-compose-key = <RALT>;
};

/ {
    behaviors {
        // Custom behavior for left rotation with LED flash
        rot_left: rotate_left_led {
            compatible = "zmk,behavior-macro";
            label = "ROTATE_LEFT_LED";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <
                &led_on
                &kp L
                &macro_wait_time 100
                &led_off
            >;
        };
        
        // Custom behavior for right rotation with LED flash
        rot_right: rotate_right_led {
            compatible = "zmk,behavior-macro";
            label = "ROTATE_RIGHT_LED";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <
                &led_on
                &kp R
                &macro_wait_time 100
                &led_off
            >;
        };
        
        // LED control behaviors
        led_on: led_on {
            compatible = "zmk,behavior-macro";
            label = "LED_ON";
            #binding-cells = <0>;
            bindings = <&gpio_set 0 15 1>;  // Set GPIO 0.15 HIGH
        };
        
        led_off: led_off {
            compatible = "zmk,behavior-macro";
            label = "LED_OFF";
            #binding-cells = <0>;
            bindings = <&gpio_set 0 15 0>;  // Set GPIO 0.15 LOW
        };
    };
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &uc 0x1F638 0   &uc 0x2191 0    &uc 0x2248 0
                &uc 0x2190 0    &uc 0x1F44D 0   &uc 0x2192 0
                &uc 0x1F680 0   &uc 0x2193 0    &mo 1
                &kp S  // Encoder button - outputs 'S' for "Switch" (easy to identify in testing)
            >;
            
            sensor-bindings = <&inc_dec_kp &rot_left &rot_right>;  // With LED flash
        };
        
        bluetooth_layer {
            bindings = <
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2
                &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_CLR
                &bt BT_NXT      &bt BT_PRV      &trans
                &trans
            >;
            
            sensor-bindings = <&inc_dec_kp &rot_left &rot_right>;  // With LED flash
        };
    };
};